# Python stubs generated by omniidl from pcProcessPort.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "_GlobalIDL"
#
__name__ = "_GlobalIDL"
_0__GlobalIDL = omniORB.openModule("_GlobalIDL", r"pcProcessPort.idl")
_0__GlobalIDL__POA = omniORB.openModule("_GlobalIDL__POA", r"pcProcessPort.idl")

# #include "BasicDataType.idl"
import BasicDataType_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")
# #include "ExtendedDataTypes.idl"
import ExtendedDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")
# #include "InterfaceDataTypes.idl"
import InterfaceDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

# interface ComPcProcess
_0__GlobalIDL._d_ComPcProcess = (omniORB.tcInternal.tv_objref, "IDL:ComPcProcess:1.0", "ComPcProcess")
omniORB.typeMapping["IDL:ComPcProcess:1.0"] = _0__GlobalIDL._d_ComPcProcess
_0__GlobalIDL.ComPcProcess = omniORB.newEmptyClass()
class ComPcProcess :
    _NP_RepositoryId = _0__GlobalIDL._d_ComPcProcess[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # typedef ... MultiPointCloud
    class MultiPointCloud:
        _NP_RepositoryId = "IDL:ComPcProcess/MultiPointCloud:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_MultiPointCloud  = (omniORB.tcInternal.tv_array, omniORB.typeMapping["IDL:RTC/PointCloud:1.0"], 4)
    _ad_MultiPointCloud = (omniORB.tcInternal.tv_alias, MultiPointCloud._NP_RepositoryId, "MultiPointCloud", (omniORB.tcInternal.tv_array, omniORB.typeMapping["IDL:RTC/PointCloud:1.0"], 4))
    _tc_MultiPointCloud = omniORB.tcInternal.createTypeCode(_ad_MultiPointCloud)
    omniORB.registerType(MultiPointCloud._NP_RepositoryId, _ad_MultiPointCloud, _tc_MultiPointCloud)
    
    # typedef ... plate_info
    class plate_info:
        _NP_RepositoryId = "IDL:ComPcProcess/plate_info:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_plate_info  = (omniORB.tcInternal.tv_array, (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_float, 10), 10)
    _ad_plate_info = (omniORB.tcInternal.tv_alias, plate_info._NP_RepositoryId, "plate_info", (omniORB.tcInternal.tv_array, (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_float, 10), 10))
    _tc_plate_info = omniORB.tcInternal.createTypeCode(_ad_plate_info)
    omniORB.registerType(plate_info._NP_RepositoryId, _ad_plate_info, _tc_plate_info)
    
    # typedef ... Matrix4X4F
    class Matrix4X4F:
        _NP_RepositoryId = "IDL:ComPcProcess/Matrix4X4F:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_Matrix4X4F  = (omniORB.tcInternal.tv_array, (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_float, 4), 4)
    _ad_Matrix4X4F = (omniORB.tcInternal.tv_alias, Matrix4X4F._NP_RepositoryId, "Matrix4X4F", (omniORB.tcInternal.tv_array, (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_float, 4), 4))
    _tc_Matrix4X4F = omniORB.tcInternal.createTypeCode(_ad_Matrix4X4F)
    omniORB.registerType(Matrix4X4F._NP_RepositoryId, _ad_Matrix4X4F, _tc_Matrix4X4F)


_0__GlobalIDL.ComPcProcess = ComPcProcess
_0__GlobalIDL._tc_ComPcProcess = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_ComPcProcess)
omniORB.registerType(ComPcProcess._NP_RepositoryId, _0__GlobalIDL._d_ComPcProcess, _0__GlobalIDL._tc_ComPcProcess)

# ComPcProcess operations and attributes
ComPcProcess._d_get_pointCloud = ((omniORB.tcInternal.tv_short, ), (omniORB.typeMapping["IDL:ComPcProcess/MultiPointCloud:1.0"], omniORB.tcInternal.tv_boolean), None)
ComPcProcess._d_save_pointCloud = ((omniORB.tcInternal.tv_short, (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_boolean, ), None)
ComPcProcess._d_plate_recog = ((omniORB.typeMapping["IDL:ComPcProcess/Matrix4X4F:1.0"], ), (omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:ComPcProcess/plate_info:1.0"], omniORB.tcInternal.tv_double), None)
ComPcProcess._d_plate_modelling = ((omniORB.typeMapping["IDL:ComPcProcess/Matrix4X4F:1.0"], ), (omniORB.tcInternal.tv_long, ), None)
ComPcProcess._d_single_plate_modelling = ((omniORB.typeMapping["IDL:ComPcProcess/Matrix4X4F:1.0"], ), (omniORB.tcInternal.tv_boolean, ), None)
ComPcProcess._d_check_destination = ((omniORB.tcInternal.tv_double, omniORB.tcInternal.tv_double, omniORB.tcInternal.tv_double), (omniORB.tcInternal.tv_double, ), None)
ComPcProcess._d_height_determine = ((omniORB.tcInternal.tv_double, ), (omniORB.tcInternal.tv_double, ), None)
ComPcProcess._d_add_PointCloud = ((omniORB.typeMapping["IDL:ComPcProcess/Matrix4X4F:1.0"], ), (omniORB.tcInternal.tv_double, ), None)
ComPcProcess._d_get_FirstCloud = ((omniORB.typeMapping["IDL:ComPcProcess/Matrix4X4F:1.0"], ), (omniORB.tcInternal.tv_double, ), None)

# ComPcProcess object reference
class _objref_ComPcProcess (CORBA.Object):
    _NP_RepositoryId = ComPcProcess._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def get_pointCloud(self, *args):
        return _omnipy.invoke(self, "get_pointCloud", _0__GlobalIDL.ComPcProcess._d_get_pointCloud, args)

    def save_pointCloud(self, *args):
        return _omnipy.invoke(self, "save_pointCloud", _0__GlobalIDL.ComPcProcess._d_save_pointCloud, args)

    def plate_recog(self, *args):
        return _omnipy.invoke(self, "plate_recog", _0__GlobalIDL.ComPcProcess._d_plate_recog, args)

    def plate_modelling(self, *args):
        return _omnipy.invoke(self, "plate_modelling", _0__GlobalIDL.ComPcProcess._d_plate_modelling, args)

    def single_plate_modelling(self, *args):
        return _omnipy.invoke(self, "single_plate_modelling", _0__GlobalIDL.ComPcProcess._d_single_plate_modelling, args)

    def check_destination(self, *args):
        return _omnipy.invoke(self, "check_destination", _0__GlobalIDL.ComPcProcess._d_check_destination, args)

    def height_determine(self, *args):
        return _omnipy.invoke(self, "height_determine", _0__GlobalIDL.ComPcProcess._d_height_determine, args)

    def add_PointCloud(self, *args):
        return _omnipy.invoke(self, "add_PointCloud", _0__GlobalIDL.ComPcProcess._d_add_PointCloud, args)

    def get_FirstCloud(self, *args):
        return _omnipy.invoke(self, "get_FirstCloud", _0__GlobalIDL.ComPcProcess._d_get_FirstCloud, args)

    __methods__ = ["get_pointCloud", "save_pointCloud", "plate_recog", "plate_modelling", "single_plate_modelling", "check_destination", "height_determine", "add_PointCloud", "get_FirstCloud"] + CORBA.Object.__methods__

omniORB.registerObjref(ComPcProcess._NP_RepositoryId, _objref_ComPcProcess)
_0__GlobalIDL._objref_ComPcProcess = _objref_ComPcProcess
del ComPcProcess, _objref_ComPcProcess

# ComPcProcess skeleton
__name__ = "_GlobalIDL__POA"
class ComPcProcess (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.ComPcProcess._NP_RepositoryId


    _omni_op_d = {"get_pointCloud": _0__GlobalIDL.ComPcProcess._d_get_pointCloud, "save_pointCloud": _0__GlobalIDL.ComPcProcess._d_save_pointCloud, "plate_recog": _0__GlobalIDL.ComPcProcess._d_plate_recog, "plate_modelling": _0__GlobalIDL.ComPcProcess._d_plate_modelling, "single_plate_modelling": _0__GlobalIDL.ComPcProcess._d_single_plate_modelling, "check_destination": _0__GlobalIDL.ComPcProcess._d_check_destination, "height_determine": _0__GlobalIDL.ComPcProcess._d_height_determine, "add_PointCloud": _0__GlobalIDL.ComPcProcess._d_add_PointCloud, "get_FirstCloud": _0__GlobalIDL.ComPcProcess._d_get_FirstCloud}

ComPcProcess._omni_skeleton = ComPcProcess
_0__GlobalIDL__POA.ComPcProcess = ComPcProcess
omniORB.registerSkeleton(ComPcProcess._NP_RepositoryId, ComPcProcess)
del ComPcProcess
__name__ = "_GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "pcProcessPort_idl"

_exported_modules = ( "_GlobalIDL", )

# The end.
