# Python stubs generated by omniidl from imProcessPort.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "_GlobalIDL"
#
__name__ = "_GlobalIDL"
_0__GlobalIDL = omniORB.openModule("_GlobalIDL", r"imProcessPort.idl")
_0__GlobalIDL__POA = omniORB.openModule("_GlobalIDL__POA", r"imProcessPort.idl")

# #include "BasicDataType.idl"
import BasicDataType_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")
# #include "ExtendedDataTypes.idl"
import ExtendedDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")
# #include "InterfaceDataTypes.idl"
import InterfaceDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

# interface ComImProcess
_0__GlobalIDL._d_ComImProcess = (omniORB.tcInternal.tv_objref, "IDL:ComImProcess:1.0", "ComImProcess")
omniORB.typeMapping["IDL:ComImProcess:1.0"] = _0__GlobalIDL._d_ComImProcess
_0__GlobalIDL.ComImProcess = omniORB.newEmptyClass()
class ComImProcess :
    _NP_RepositoryId = _0__GlobalIDL._d_ComImProcess[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # typedef ... MultiImage
    class MultiImage:
        _NP_RepositoryId = "IDL:ComImProcess/MultiImage:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_MultiImage  = (omniORB.tcInternal.tv_array, omniORB.typeMapping["IDL:RTC/CameraImage:1.0"], 4)
    _ad_MultiImage = (omniORB.tcInternal.tv_alias, MultiImage._NP_RepositoryId, "MultiImage", (omniORB.tcInternal.tv_array, omniORB.typeMapping["IDL:RTC/CameraImage:1.0"], 4))
    _tc_MultiImage = omniORB.tcInternal.createTypeCode(_ad_MultiImage)
    omniORB.registerType(MultiImage._NP_RepositoryId, _ad_MultiImage, _tc_MultiImage)


_0__GlobalIDL.ComImProcess = ComImProcess
_0__GlobalIDL._tc_ComImProcess = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_ComImProcess)
omniORB.registerType(ComImProcess._NP_RepositoryId, _0__GlobalIDL._d_ComImProcess, _0__GlobalIDL._tc_ComImProcess)

# ComImProcess operations and attributes
ComImProcess._d_get_colorImage = ((omniORB.tcInternal.tv_short, ), (omniORB.typeMapping["IDL:ComImProcess/MultiImage:1.0"], omniORB.tcInternal.tv_boolean), None)
ComImProcess._d_get_irImage = ((omniORB.tcInternal.tv_short, ), (omniORB.typeMapping["IDL:ComImProcess/MultiImage:1.0"], omniORB.tcInternal.tv_boolean), None)
ComImProcess._d_get_ir_rightImage = ((omniORB.tcInternal.tv_short, ), (omniORB.typeMapping["IDL:ComImProcess/MultiImage:1.0"], omniORB.tcInternal.tv_boolean), None)
ComImProcess._d_get_depthImage = ((omniORB.tcInternal.tv_short, ), (omniORB.typeMapping["IDL:ComImProcess/MultiImage:1.0"], omniORB.tcInternal.tv_boolean), None)
ComImProcess._d_save_colorImage = ((omniORB.tcInternal.tv_short, (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_boolean, ), None)
ComImProcess._d_save_irImage = ((omniORB.tcInternal.tv_short, (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_boolean, ), None)
ComImProcess._d_save_ir_rightImage = ((omniORB.tcInternal.tv_short, (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_boolean, ), None)
ComImProcess._d_save_depthImage = ((omniORB.tcInternal.tv_short, (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_boolean, ), None)

# ComImProcess object reference
class _objref_ComImProcess (CORBA.Object):
    _NP_RepositoryId = ComImProcess._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def get_colorImage(self, *args):
        return _omnipy.invoke(self, "get_colorImage", _0__GlobalIDL.ComImProcess._d_get_colorImage, args)

    def get_irImage(self, *args):
        return _omnipy.invoke(self, "get_irImage", _0__GlobalIDL.ComImProcess._d_get_irImage, args)

    def get_ir_rightImage(self, *args):
        return _omnipy.invoke(self, "get_ir_rightImage", _0__GlobalIDL.ComImProcess._d_get_ir_rightImage, args)

    def get_depthImage(self, *args):
        return _omnipy.invoke(self, "get_depthImage", _0__GlobalIDL.ComImProcess._d_get_depthImage, args)

    def save_colorImage(self, *args):
        return _omnipy.invoke(self, "save_colorImage", _0__GlobalIDL.ComImProcess._d_save_colorImage, args)

    def save_irImage(self, *args):
        return _omnipy.invoke(self, "save_irImage", _0__GlobalIDL.ComImProcess._d_save_irImage, args)

    def save_ir_rightImage(self, *args):
        return _omnipy.invoke(self, "save_ir_rightImage", _0__GlobalIDL.ComImProcess._d_save_ir_rightImage, args)

    def save_depthImage(self, *args):
        return _omnipy.invoke(self, "save_depthImage", _0__GlobalIDL.ComImProcess._d_save_depthImage, args)

    __methods__ = ["get_colorImage", "get_irImage", "get_ir_rightImage", "get_depthImage", "save_colorImage", "save_irImage", "save_ir_rightImage", "save_depthImage"] + CORBA.Object.__methods__

omniORB.registerObjref(ComImProcess._NP_RepositoryId, _objref_ComImProcess)
_0__GlobalIDL._objref_ComImProcess = _objref_ComImProcess
del ComImProcess, _objref_ComImProcess

# ComImProcess skeleton
__name__ = "_GlobalIDL__POA"
class ComImProcess (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.ComImProcess._NP_RepositoryId


    _omni_op_d = {"get_colorImage": _0__GlobalIDL.ComImProcess._d_get_colorImage, "get_irImage": _0__GlobalIDL.ComImProcess._d_get_irImage, "get_ir_rightImage": _0__GlobalIDL.ComImProcess._d_get_ir_rightImage, "get_depthImage": _0__GlobalIDL.ComImProcess._d_get_depthImage, "save_colorImage": _0__GlobalIDL.ComImProcess._d_save_colorImage, "save_irImage": _0__GlobalIDL.ComImProcess._d_save_irImage, "save_ir_rightImage": _0__GlobalIDL.ComImProcess._d_save_ir_rightImage, "save_depthImage": _0__GlobalIDL.ComImProcess._d_save_depthImage}

ComImProcess._omni_skeleton = ComImProcess
_0__GlobalIDL__POA.ComImProcess = ComImProcess
omniORB.registerSkeleton(ComImProcess._NP_RepositoryId, ComImProcess)
del ComImProcess
__name__ = "_GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "imProcessPort_idl"

_exported_modules = ( "_GlobalIDL", )

# The end.
